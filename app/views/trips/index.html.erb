<turbo-frame id="trip-results">
  <% if @results.empty? %>
    <div class="flex items-center justify-center h-32 text-gray-500">
      <span class="text-2xl">Aucun résultat</span>
    </div>
  <% end %>
  <% @results.each do |result| %>
    <h3 class="mt-4 mb-2 text-xs text-gray-500">Dans <%= distance_of_time_in_words(Time.now.in_time_zone("Europe/Paris"), result[:path].first[:departure_time].in_time_zone("Europe/Paris")) %></h3>
    <% result[:path].group_by { |segment| segment[:route_id] }.each do |route_id, segments| %>
      <div class="flex items-center">
        <span class="w-8 mr-2 text-xs text-gray-500">
          <%= display_time segments.first[:departure_time] %>
        </span>
        <span class="block w-3 h-3 mx-[5px] bg-white border-2 border-gray-800 rounded-full"></span>

        <span class="ml-2 font-bold text-gray-700">
          <%= Gtfs::Stop.find(segments.first[:from]).name %>
        </span>
      </div>
      <div class="py-4 ml-[49px] -my-3 border-l-4 border-emerald-600/80 items-center flex" data-controller="trip-segment">

        <% if segments.count > 1 %>
          <div>
            <span class="py-1 ml-4 text-xs text-gray-500 cursor-pointer front-semibold hover:underline" data-action="click->trip-segment#toggle">
              <%= pluralize(segments.count - 1, "arrêt") %>
            </span>
            <div class="hidden ml-6 text-xs font-medium text-gray-600 stops">
              <% segments.each_with_index do |segment, index| %>
                <% if index > 0 %>
                  <div class="py-1 text-xs text-gray-500">
                    <%= Gtfs::Stop.find(segment[:from]).name %> - <%= display_time(segment[:departure_time]) %>
                  </div>
                <% end %>
              <% end %>
            </div>
          </div>
        <% end %>
      </div>
    <% end %>

    <% last_segment = result[:path].group_by { |segment| segment[:route_id] }.to_a.last %>
    <div class="flex items-center">
      <span class="w-8 mr-2 text-xs text-gray-500">
        <%= display_time last_segment[1].last[:arrival_time] %>
      </span>
      <span class="block w-3 h-3 mx-[5px] bg-white border-2 border-gray-800 rounded-full"></span>
      <span class="ml-2 font-bold text-gray-700">
        <%= Gtfs::Stop.find(last_segment[1].last[:to]).name %>
      </span>
    </div>
  <% end %>
<script>
  <% if @results.present? %>
   ids = <%== @results.first[:path].flatten.map{ |segment| "#{segment[:to]}"}.prepend(@results.first[:start]) %>

  if(window.trip_layers === undefined) {
    window.trip_layers = []
  }

  fetch(`/api/trips/id?stop_ids=${ids.join(',')}`)
    .then(response => response.json())
    .then(data => {
      let idx = 0
      window.trip_layers.forEach((layer) => {
        window.map.removeLayer(layer)
        window.map.removeSource(layer)
      })
      window.trip_layers = []
      data.forEach((trip) => {
        idx += 1
        window.trip_layers.push('trip_' + idx)
        window.map.addSource('trip_' + idx, {
          type: 'geojson',
          data: trip
        })
        window.map.addLayer({
          id: 'trip_' + idx,
          type: 'line',
          source: 'trip_' + idx,
          layout: {
            'line-join': 'round',
            'line-cap': 'round'
          },
          paint: {
            'line-color': '#065f46',
            'line-opacity': 0.8,
            'line-width': 5
          }
        })
      })
    })
  <% end %>
</script>

</turbo-frame>
